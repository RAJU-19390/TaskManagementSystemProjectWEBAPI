//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TaskDataAccessLayer
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class TaskManagementDatabaseEntities : DbContext
    {
        public TaskManagementDatabaseEntities()
            : base("name=TaskManagementDatabaseEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Status> Status { get; set; }
        public virtual DbSet<UserInfo> UserInfoes { get; set; }
        public virtual DbSet<Task> Tasks { get; set; }
    
        public virtual int sp_DeleteStatusById(Nullable<int> p_Id)
        {
            var p_IdParameter = p_Id.HasValue ?
                new ObjectParameter("P_Id", p_Id) :
                new ObjectParameter("P_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DeleteStatusById", p_IdParameter);
        }
    
        public virtual int sp_DeleteTaskById(Nullable<int> p_Id)
        {
            var p_IdParameter = p_Id.HasValue ?
                new ObjectParameter("P_Id", p_Id) :
                new ObjectParameter("P_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DeleteTaskById", p_IdParameter);
        }
    
        public virtual int sp_DeleteUserInfoById(Nullable<int> p_Id)
        {
            var p_IdParameter = p_Id.HasValue ?
                new ObjectParameter("P_Id", p_Id) :
                new ObjectParameter("P_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DeleteUserInfoById", p_IdParameter);
        }
    
        public virtual ObjectResult<sp_GetTaskById_Result> sp_GetTaskById(Nullable<int> p_UserId)
        {
            var p_UserIdParameter = p_UserId.HasValue ?
                new ObjectParameter("P_UserId", p_UserId) :
                new ObjectParameter("P_UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetTaskById_Result>("sp_GetTaskById", p_UserIdParameter);
        }
    
        public virtual ObjectResult<sp_GetTaskDetails_Result> sp_GetTaskDetails()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetTaskDetails_Result>("sp_GetTaskDetails");
        }
    
        public virtual ObjectResult<sp_GetUserById_Result> sp_GetUserById(Nullable<int> p_Id)
        {
            var p_IdParameter = p_Id.HasValue ?
                new ObjectParameter("P_Id", p_Id) :
                new ObjectParameter("P_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetUserById_Result>("sp_GetUserById", p_IdParameter);
        }
    
        public virtual int sp_GetUserByName(string p_Name)
        {
            var p_NameParameter = p_Name != null ?
                new ObjectParameter("P_Name", p_Name) :
                new ObjectParameter("P_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_GetUserByName", p_NameParameter);
        }
    
        public virtual ObjectResult<sp_GetUserDetails_Result> sp_GetUserDetails()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetUserDetails_Result>("sp_GetUserDetails");
        }
    
        public virtual int sp_InsertStatus(string p_Mode)
        {
            var p_ModeParameter = p_Mode != null ?
                new ObjectParameter("P_Mode", p_Mode) :
                new ObjectParameter("P_Mode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertStatus", p_ModeParameter);
        }
    
        public virtual int sp_InsertTask(string p_Title, string p_Description, Nullable<System.DateTime> p_DueDate, Nullable<int> p_StatusId, Nullable<int> p_UserId)
        {
            var p_TitleParameter = p_Title != null ?
                new ObjectParameter("P_Title", p_Title) :
                new ObjectParameter("P_Title", typeof(string));
    
            var p_DescriptionParameter = p_Description != null ?
                new ObjectParameter("P_Description", p_Description) :
                new ObjectParameter("P_Description", typeof(string));
    
            var p_DueDateParameter = p_DueDate.HasValue ?
                new ObjectParameter("P_DueDate", p_DueDate) :
                new ObjectParameter("P_DueDate", typeof(System.DateTime));
    
            var p_StatusIdParameter = p_StatusId.HasValue ?
                new ObjectParameter("P_StatusId", p_StatusId) :
                new ObjectParameter("P_StatusId", typeof(int));
    
            var p_UserIdParameter = p_UserId.HasValue ?
                new ObjectParameter("P_UserId", p_UserId) :
                new ObjectParameter("P_UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertTask", p_TitleParameter, p_DescriptionParameter, p_DueDateParameter, p_StatusIdParameter, p_UserIdParameter);
        }
    
        public virtual int sp_InsertUserInfo(string p_Name, string p_Email, string p_Password, Nullable<bool> p_IsAdmin)
        {
            var p_NameParameter = p_Name != null ?
                new ObjectParameter("P_Name", p_Name) :
                new ObjectParameter("P_Name", typeof(string));
    
            var p_EmailParameter = p_Email != null ?
                new ObjectParameter("P_Email", p_Email) :
                new ObjectParameter("P_Email", typeof(string));
    
            var p_PasswordParameter = p_Password != null ?
                new ObjectParameter("P_Password", p_Password) :
                new ObjectParameter("P_Password", typeof(string));
    
            var p_IsAdminParameter = p_IsAdmin.HasValue ?
                new ObjectParameter("P_IsAdmin", p_IsAdmin) :
                new ObjectParameter("P_IsAdmin", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertUserInfo", p_NameParameter, p_EmailParameter, p_PasswordParameter, p_IsAdminParameter);
        }
    
        public virtual int sp_UpdateStatus(Nullable<int> p_Id, string p_Mode)
        {
            var p_IdParameter = p_Id.HasValue ?
                new ObjectParameter("p_Id", p_Id) :
                new ObjectParameter("p_Id", typeof(int));
    
            var p_ModeParameter = p_Mode != null ?
                new ObjectParameter("P_Mode", p_Mode) :
                new ObjectParameter("P_Mode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UpdateStatus", p_IdParameter, p_ModeParameter);
        }
    
        public virtual int sp_UpdateTask(Nullable<int> p_Id, string p_Title, string p_Description, Nullable<System.DateTime> p_DueDate, Nullable<int> p_StatusId, Nullable<int> p_UserId)
        {
            var p_IdParameter = p_Id.HasValue ?
                new ObjectParameter("P_Id", p_Id) :
                new ObjectParameter("P_Id", typeof(int));
    
            var p_TitleParameter = p_Title != null ?
                new ObjectParameter("P_Title", p_Title) :
                new ObjectParameter("P_Title", typeof(string));
    
            var p_DescriptionParameter = p_Description != null ?
                new ObjectParameter("P_Description", p_Description) :
                new ObjectParameter("P_Description", typeof(string));
    
            var p_DueDateParameter = p_DueDate.HasValue ?
                new ObjectParameter("P_DueDate", p_DueDate) :
                new ObjectParameter("P_DueDate", typeof(System.DateTime));
    
            var p_StatusIdParameter = p_StatusId.HasValue ?
                new ObjectParameter("P_StatusId", p_StatusId) :
                new ObjectParameter("P_StatusId", typeof(int));
    
            var p_UserIdParameter = p_UserId.HasValue ?
                new ObjectParameter("P_UserId", p_UserId) :
                new ObjectParameter("P_UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UpdateTask", p_IdParameter, p_TitleParameter, p_DescriptionParameter, p_DueDateParameter, p_StatusIdParameter, p_UserIdParameter);
        }
    
        public virtual int sp_UpdateUserInfo(Nullable<int> p_Id, string p_Name, string p_Email, string p_Password, Nullable<bool> p_IsAdmin)
        {
            var p_IdParameter = p_Id.HasValue ?
                new ObjectParameter("P_Id", p_Id) :
                new ObjectParameter("P_Id", typeof(int));
    
            var p_NameParameter = p_Name != null ?
                new ObjectParameter("P_Name", p_Name) :
                new ObjectParameter("P_Name", typeof(string));
    
            var p_EmailParameter = p_Email != null ?
                new ObjectParameter("P_Email", p_Email) :
                new ObjectParameter("P_Email", typeof(string));
    
            var p_PasswordParameter = p_Password != null ?
                new ObjectParameter("P_Password", p_Password) :
                new ObjectParameter("P_Password", typeof(string));
    
            var p_IsAdminParameter = p_IsAdmin.HasValue ?
                new ObjectParameter("P_IsAdmin", p_IsAdmin) :
                new ObjectParameter("P_IsAdmin", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UpdateUserInfo", p_IdParameter, p_NameParameter, p_EmailParameter, p_PasswordParameter, p_IsAdminParameter);
        }
    }
}
